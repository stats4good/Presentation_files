require(reshape)                 # Manipulação de base de dados
require(plyr)                    # Manipulação de base de dados
require(dplyr)                   # Manipulação de base de dados
require(ggplot2)                 # Visualização
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/MyFunctions.R')
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/parGrafico.R')
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/MyFunctions.R', encoding = "UTF-8")
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/functions.R', encoding = "UTF-8")
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/parGrafico.R')
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/parGrafico.R', encoding = "UTF-8")
DadosPNAD2008 <- read.csv(file = "../Arquivos/DadosPNAD2008.csv")
DadosPNAD2008 <- read.csv(file = "../PNAD_2008/Arquivos/DadosPNAD2008.csv")
ggplot() +
geom_histogram(data = DadosPNAD2008, aes(x = Renda, y = ..density..), fill = "steelblue") +
ylab("Contagem") + xlab("Renda") +
theme_bw()
summary(DadosPNAD2008$Renda)
quantile(DadosPNAD2008$Renda)
ggplot() +
geom_histogram(data = DadosPNAD2008, aes(x = Renda, y = ..density..), fill = "steelblue", colour = "black") +
ylab("Contagem") + xlab("Renda") +
theme_bw()
ggplot() +
geom_histogram(data = DadosPNAD2008, aes(x = Renda,
y = ..density..),
fill = "steelblue",
colour = "black",
alpha = 0.5) +
ylab("Contagem") + xlab("Renda") +
theme_bw()
summary(DadosPNAD2008$Renda)
quantile(DadosPNAD2008$Renda)
Cov <- "Renda"                                            # Covariável do modelo
formula <- formula(paste('Plano~', Cov))                  # Fórmula do modelo
MaxPlot <- 10000                                          #
MaxRenda <- 25000                                         # Não pegaremos rendas muuuuito altas. Queremos modelar para a maioria
nPoint <- 100                                             # Para fazer o gráfico empírico
DadosPNAD2008 <- subset(DadosPNAD2008, Renda <= MaxRenda) # Restringindo a base. Retiradas 70 linhas
ggplot() +
geom_histogram(data = DadosPNAD2008, aes(x = Renda, y = ..density..),
fill = "steelblue",
colour = "black",
alpha = 0.5) +
ylab("Contagem") + xlab("Renda") +
theme_bw()
source("../../Funcoes/skew_glm.R")
source("../Funcoes/skew_glm.R")
formula
glm.logit <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("logit"))
glm.logit
glm.logit$converged
glm.probit <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("probit"))
family = binomial("probitasd"))
family = binomial("probitasd")
glm(formula = formula, data = DadosPNAD2008,
family = binomial("probitdfc"))
link
link()
binomial()
binomial("logit")
binomial("probit")
binomial()
?binomial
glm.logit <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("logit"))
glm.probit <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("probit"))
glm.cauchit <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("cauchit"))
glm.cloglog <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("cloglog"))
DadosPNAD2008$"RendaCat" <- cut(x = DadosPNAD2008$"Renda", b = nPoint, na.rm = T)
Emp <- DadosPNAD2008 %>%
group_by(RendaCat) %>%
summarise(Planos = sum(Plano), Total = length(Plano), PtMedio = mean(Renda))
Emp$"Distr" <- Emp$"Plano"/Emp$"Total"
nPoint
View(Emp)
cut(x = DadosPNAD2008$"Renda", b = nPoint, na.rm = T)
View(Emp)
DadosPNAD2008$"RendaCat" <- cut(x = DadosPNAD2008$"Renda", b = nPoint, na.rm = T)
Emp <- DadosPNAD2008 %>%
group_by(RendaCat) %>%
summarise(Planos = sum(Plano), Total = length(Plano), PtMedio = mean(Renda))
Emp$"Distr" <- Emp$"Plano"/Emp$"Total"
DadosPNAD2008 <- subset(DadosPNAD2008, Renda <= MaxRenda) # Restringindo a base. Retiradas 70 linhas
DadosPNAD2008$"RendaCat" <- cut(x = DadosPNAD2008$"Renda", b = nPoint, na.rm = T)
Emp <- DadosPNAD2008 %>%
group_by(RendaCat) %>%
summarise(Planos = sum(Plano), Total = length(Plano), PtMedio = mean(Renda))
Emp$"Distr" <- Emp$"Plano"/Emp$"Total"
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr,
colour = "Empírica"),
size = 3,
alpha = .5) +
}
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr,
colour = "Empírica"),
size = 3,
alpha = .5)
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr,
colour = "IndianRed"),
size = 3,
alpha = .5)
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr),
colour = "IndianRed",
size = 3,
alpha = .5)
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr),
colour = "IndianRed5",
size = 3,
alpha = .5)
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr),
colour = "IndianRed4",
size = 3,
alpha = .5)
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr),
size = 3,
alpha = .5) +
theme_bw()
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
size = 3,
y = Distr),
alpha = .5) +
xlab("Renda média") + ylab("P(Plano de saúde | Renda média)") +
theme_bw()
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr),
size = 3,
alpha = .5) +
xlab("Renda média") + ylab("P(Plano de saúde | Renda média)") +
theme_bw()
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr),
colour = "IndianRed",
size = 3,
alpha = 1) +
xlab("Renda média") + ylab("P(Plano de saúde | Renda média)") +
theme_bw()
require(reshape)                 # Manipulação de base de dados
require(plyr)                    # Manipulação de base de dados
require(dplyr)                   # Manipulação de base de dados
require(ggplot2)                 # Visualização
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/functions.R', encoding = "UTF-8")
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/parGrafico.R', encoding = "UTF-8")
#------------------- Leitura dos dados
DadosPNAD2008 <- read.csv(file = "../PNAD_2008/Arquivos/DadosPNAD2008.csv")
ggplot() +
geom_histogram(data = DadosPNAD2008, aes(x = Renda, y = ..density..),
fill = "steelblue",
colour = "black",
alpha = 0.5) +
ylab("Contagem") + xlab("Renda") +
theme_bw()
summary(DadosPNAD2008$Renda)
quantile(DadosPNAD2008$Renda)
#------------------- Algumas definicoes
Cov <- "Renda"                                            # Covariável do modelo
formula <- formula(paste('Plano~', Cov))                  # Fórmula do modelo
MaxPlot <- 10000                                          #
MaxRenda <- 25000                                         # Não pegaremos rendas muuuuito altas. Queremos modelar para a maioria
nPoint <- 100                                             # Para fazer o gráfico empírico
DadosPNAD2008 <- subset(DadosPNAD2008, Renda <= MaxRenda) # Restringindo a base. Retiradas 70 linhas
ggplot() +
geom_histogram(data = DadosPNAD2008, aes(x = Renda, y = ..density..),
fill = "steelblue",
colour = "black",
alpha = 0.5) +
ylab("Contagem") + xlab("Renda") +
theme_bw()
#-------------------
#------------------ Distribuicao empirica
DadosPNAD2008$"RendaCat" <- cut(x = DadosPNAD2008$"Renda", b = nPoint, na.rm = T)
Emp <- DadosPNAD2008 %>%
group_by(RendaCat) %>%
summarise(Planos = sum(Plano), Total = length(Plano), PtMedio = mean(Renda))
Emp$"Distr" <- Emp$"Plano"/Emp$"Total"
ggplot() + geom_line(data = Emp,  aes(x = PtMedio,
y = Distr),
colour = "IndianRed",
size = 3,
alpha = 1) +
xlab("Renda média") + ylab("P(Plano de saúde | Renda média)") +
theme_bw()
glm.logit <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("logit"))                    # Acumulada da logística
glm.probit <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("probit"))                  # Acumulada da normal
glm.cauchit <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("cauchit"))                # Acumulada da cauchy
glm.cloglog <- glm(formula = formula, data = DadosPNAD2008,
family = binomial("cloglog"))                # Acumulada da ???
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/functions.R', encoding = 'UTF-8', echo=TRUE)
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/functions.R', encoding = 'UTF-8', echo=TRUE)
skew.glm.robit <- skew.robit(f = formula, data = DadosPNAD2008, nu = 4, alpha = 2)
DadosPNAD2008
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/functions.R', encoding = 'UTF-8', echo=TRUE)
skew.glm.robit <- skew.robit(f = formula,
data = DadosPNAD2008,
Y = "Renda",
nu = 4,
alpha = 2)
f = formula
data = DadosPNAD2008
Y = "Renda"
nu = 4
alpha = 2
Y <- data$Y
data[,paste(Y)]
Y <- data[, eval(expr = Y)]
Y <- data[, parse(text = Y)]
Y <- data[, parse(text = eval(expr = Y))]
eval(expr = Y)
eval(expr = Y)
Y
Y <- "Renda"
eval(expr = Y)
parse(text = eval(expr = Y))
eval(expr = parse(text = Y))
parse(text = Y)
eval(expr = parse(text = Y))
Y <- data[, eval(expr = parse(text = Y))]
data[, eval(expr = parse(text = Y))]
glm
data,                          # Dados
environment(f)
make.link()
?make.link()
binomial("logit")
binomial
&&
?&&
require(data.table)              # Manipulação de base de dados
require(ggplot2)                 # Visualização
require(evd)                     # Distribuição gumbel
require(skewt)                   # Distribuição t assimétrica
require(mosaic)                  # Para derivação
source('~/Dropbox/Projetos/Stat4Good/2016/Semestre 1/PopulacaoSUS/Funcoes/parGrafico.R', encoding = "UTF-8")
set.seed(1)
ggplot(data = data.frame(x = c(-10, 10), y = c(0, 1)), aes(x = x, y = y)) +
stat_function(fun = dlogis, aes(colour = "Logística"), size = sizeLine) +
stat_function(fun = dnorm, aes(colour = "Normal"), size = sizeLine) +
stat_function(fun = dcauchy, aes(colour = "Cauchy"), size = sizeLine) +
stat_function(fun = dgumbel, aes(colour = "Gumbel"), size = sizeLine) +
ylab("Densidade") + xlab("Domínio") +
scale_colour_manual("Distribuições", values = c("Logística" = "IndianRed",
"Normal" = "steelblue",
"Cauchy" = "SeaGreen",
"Gumbel" = "Goldenrod")) +
theme_bw() +
theme(legend.position = c(0.2,0.80),
legend.background = element_rect(colour = 'transparent'),
legend.title = element_text(family = family, size = sizeLegendTitle),
legend.text = element_text(family = family, size = sizeLegend))
